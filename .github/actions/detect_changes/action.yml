name: 'Detect changes'
description: 'Detect changes in the repository'
outputs:
  envs_changed_dirs:
    description: 'List of changed environment directories'
    value: ${{ steps.envs_filter.outputs.changes }}
  modules_changed_dirs:
    description: 'List of changed module directories'
    value: ${{ steps.modules_filter.outputs.changes }}
  target_dirs: # For plan and apply jobs.
    description: 'Target directories based on changed files'
    value: ${{ steps.set_target_dirs.outputs.dirs }}
runs:
  using: "composite"
  steps:
    - name: Check branch
      run: |
        echo "Current branch: ${{ GITHUB.HEAD_REF }}"
        echo "Merge Target Branch: ${{ GITHUB.BASE_REF }}"
      shell: bash

    - name: Get changed envs files
      uses: dorny/paths-filter@v3
      id: envs_filter
      with:
        filters: .github/paths-filter/envs-path-filter.yml

    - name: Get changed modules files
      uses: dorny/paths-filter@v3
      id: modules_filter
      with:
        filters: .github/paths-filter/modules-path-filter.yml

    - name: Check changed directories
      run: |
        echo "Changed envs directories: ${{ steps.envs_filter.outputs.changes }}"
        echo "Changed modules directories: ${{ steps.modules_filter.outputs.changes }}"
      shell: bash

    - name: Set target directories
      id: set_target_dirs
      run: |
        if [ "${{ steps.modules_filter.outputs.changes }}" != "[]" ]; then
          echo 'dirs=["mng", "prd", "dev"]' >> $GITHUB_OUTPUT
        elif [ "${{ steps.envs_filter.outputs.changes }}" != "[]" ]; then
          echo "dirs=$(echo '${{ steps.envs_filter.outputs.changes }}' | jq -c .)" >> $GITHUB_OUTPUT
        else
          echo "dirs=[]" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifact
        path: .
        include-hidden-files: true
        retention-days: 1
