name: Apply
on:
  pull_request:
    branches:
      - main
    types:
      - closed
permissions:
  contents: read
  id-token: write
  pull-requests: write
env:
  WORKING_DIRECTORY: terraform/aws/environments
jobs:
  detect:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    outputs:
      target_dirs: ${{ steps.detect_changes.outputs.target_dirs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Check branch
      #   run: |
      #     echo "Current branch: ${{ GITHUB.HEAD_REF }}"
      #     echo "Merge Target Branch: ${{ GITHUB.BASE_REF }}"

      # - name: Get changed envs files
      #   uses: dorny/paths-filter@v3
      #   id: envs_filter
      #   with:
      #     filters: .github/paths-filter/envs-path-filter.yml

      # - name: Get changed modules files
      #   uses: dorny/paths-filter@v3
      #   id: modules_filter
      #   with:
      #     filters: .github/paths-filter/modules-path-filter.yml

      # - name: Check changed directories
      #   run: |
      #     echo "Changed envs directories: ${{ steps.envs_filter.outputs.changes }}"
      #     echo "Changed modules directories: ${{ steps.modules_filter.outputs.changes }}"

      # - name: Set target directories
      #   id: set_target_dirs
      #   run: |
      #     if [ "${{ steps.modules_filter.outputs.changes }}" != "[]" ]; then
      #       echo 'dirs=["mng", "prd", "dev"]' >> $GITHUB_OUTPUT
      #     elif [ "${{ steps.envs_filter.outputs.changes }}" != "[]" ]; then
      #       echo "dirs=$(echo '${{ steps.envs_filter.outputs.changes }}' | jq -c .)" >> $GITHUB_OUTPUT
      #     else
      #       echo "dirs=[]" >> $GITHUB_OUTPUT
      #     fi

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: artifact
      #     path: .
      #     include-hidden-files: true
      #     retention-days: 1

      - name: Detect changes
        id: detect_changes
        uses: ./.github/actions/detect_changes

  apply:
    needs: detect
    if: ${{ fromJSON(needs.detect.outputs.target_dirs)[0] != null }}
    runs-on: ubuntu-latest
    environment: ${{ matrix.target_dir }}
    strategy:
      matrix:
        target_dir: ${{ fromJSON(needs.detect.outputs.target_dirs) }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact

      - name: Setup library
        uses: ./.github/actions/setup_library
        with:
          working_directory: ${{ env.WORKING_DIRECTORY }}/${{ matrix.target_dir }}
          oidc_role_arn: ${{ secrets.OIDC_ROLE_ARN }}

      - name: Terraform Apply
        working-directory: ${{ env.WORKING_DIRECTORY }}/${{ matrix.target_dir }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tfcmt -var target:${{ matrix.target_dir }} apply -- terraform apply -auto-approve
