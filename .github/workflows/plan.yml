name: Plan
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  id-token: write
  pull-requests: write
  issues: write
env:
  WORKING_DIRECTORY: terraform/aws/environments
jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      target_dirs: ${{ steps.detect_changes.outputs.target_dirs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect changes
        id: detect_changes
        uses: ./.github/actions/detect_changes

  plan:
    needs: detect
    if: ${{ fromJSON(needs.detect.outputs.target_dirs)[0] != null }}
    runs-on: ubuntu-latest
    environment: ${{ matrix.target_dir }}
    strategy:
      matrix:
        target_dir: ${{ fromJSON(needs.detect.outputs.target_dirs) }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact-${{ github.run_id }}

      - name: Setup library
        uses: ./.github/actions/setup_library
        with:
          working_directory: ${{ env.WORKING_DIRECTORY }}/${{ matrix.target_dir }}
          oidc_role_arn: ${{ secrets.OIDC_ROLE_ARN }}

      - name: Terraform plan
        working-directory: ${{ env.WORKING_DIRECTORY }}/${{ matrix.target_dir }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tfcmt -var target:${{ matrix.target_dir }} plan -patch -- terraform plan -no-color -input=false
