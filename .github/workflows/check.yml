name: Check
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  id-token: write
  pull-requests: write
env:
  ENVS_WORKING_DIRECTORY: terraform/aws/environments
  MODULES_WORKING_DIRECTORY: terraform/aws/modules
jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      envs_changed_dirs: ${{ steps.detect_changes.outputs.envs_changed_dirs }}
      modules_changed_dirs: ${{ steps.detect_changes.outputs.modules_changed_dirs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect changes
        id: detect_changes
        uses: ./.github/actions/detect_changes

  envs-ci:
    needs: detect
    if: ${{ fromJSON(needs.detect.outputs.envs_changed_dirs)[0] != null }}
    runs-on: ubuntu-latest
    environment: ${{ matrix.envs_changed_dir }}
    strategy:
      matrix:
        envs_changed_dir: ${{ fromJSON(needs.detect.outputs.envs_changed_dirs) }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact

      - name: Setup library
        uses: ./.github/actions/setup_library
        with:
          working_directory: ${{ env.ENVS_WORKING_DIRECTORY }}/${{ matrix.envs_changed_dir }}
          oidc_role_arn: ${{ secrets.OIDC_ROLE_ARN }}

      - name: Check Terraform
        uses: ./.github/actions/check
        with:
          working_directory: ${{ env.ENVS_WORKING_DIRECTORY }}/${{ matrix.envs_changed_dir }}

  modules-ci:
    needs: detect
    if: ${{ fromJSON(needs.detect.outputs.modules_changed_dirs)[0] != null }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules_changed_dir: ${{ fromJSON(needs.detect.outputs.modules_changed_dirs) }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact

      - name: Setup library
        uses: ./.github/actions/setup_library
        with:
          working_directory: ${{ env.MODULES_WORKING_DIRECTORY }}/${{ matrix.modules_changed_dir }}
          skip_configure_aws: true

      - name: Check Terraform
        uses: ./.github/actions/check
        with:
          working_directory: ${{ env.MODULES_WORKING_DIRECTORY }}/${{ matrix.modules_changed_dir }}

      # When install terraform using aqua, can't receive the standard output of fmt, so comment it out... Cause unknown.
      # - name: Comment fmt
      #   if: ${{ steps.fmt.outputs.stdout }} != ''
      #   uses: actions/github-script@v7
      #   env:
      #     FMT: ${{ steps.fmt.outputs.stdout }}
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const output = `
      #       #### Terraform fmt ðŸ–Œ\`${{ steps.fmt.outcome }}\`
      #       <details>
      #       <summary>Show fmt</summary>
      #       \n\`\`\`\n${{ env.WORKING_DIRECTORY }}/environments/${{ matrix.target_dir }}/${process.env.FMT}\n\`\`\`
      #       </details>`;
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       });

  slack_notify:
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact

      - name: Notify slack
        uses: ./.github/actions/slack_notify
        with:
          slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
