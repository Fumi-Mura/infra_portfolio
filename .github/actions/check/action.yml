name: 'Check Terraform'
description: 'Check Terraform'
inputs:
  working_directory:
    description: 'working_directory'
    required: true
runs:
  using: "composite"
  steps:
    - name: TFlint (PR Context)
      if: ${{ github.event_name == 'pull_request' }}
      working-directory: ${{ inputs.working_directory }}
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        tflint --init --config ${{ github.workspace }}/terraform/.tflint.hcl
        tflint --recursive --config ${{ github.workspace }}/terraform/.tflint.hcl --format=checkstyle | \
        reviewdog -f=checkstyle \
                  -name=tflint \
                  -reporter=github-pr-review \
                  -filter-mode=nofilter \
                  -fail-on-error=false \
                  -level=warning
      shell: bash

    - name: TFlint (Non-PR Context)
      if: ${{ github.event_name != 'pull_request' }}
      working-directory: ${{ inputs.working_directory }}
      run: |
        tflint --init --config ${{ github.workspace }}/terraform/.tflint.hcl
        tflint --recursive --config ${{ github.workspace }}/terraform/.tflint.hcl
      shell: bash

    - name: trivy
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: config
        severity: 'HIGH,CRITICAL'
        scan-ref: ${{ inputs.working_directory }}
        output: trivy-scan-result.md
        trivyignores: ${{ github.workspace }}/.trivyignore.yaml

    - name: Format trivy scan result
      run: |
        if [ -s trivy-scan-result.md ]; then
          echo -e "## trivy scan result\n<details><summary>Scan Result (Click me)</summary>\n\n\`\`\`\n$(cat trivy-scan-result.md)\n\`\`\`\n</details>" > formatted-trivy-result.md
        else
          echo -e "## trivy scan result\n No vulnerabilities were detected." > formatted-trivy-result.md
        fi
      shell: bash

    - name: Comment trivy result
      if: ${{ github.event_name == 'pull_request' }}
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        GITHUB_TOKEN: ${{ github.token }}
        path: formatted-trivy-result.md
        header: trivy

    - name: Terraform validate
      working-directory: ${{ inputs.working_directory }}
      run: terraform validate -no-color
      shell: bash

    - name: Terraform fmt
      id: fmt
      working-directory: ${{ inputs.working_directory }}
      run: terraform fmt -check -recursive
      shell: bash

    # When install terraform using aqua, can't receive the standard output of fmt, so comment it out... Cause unknown.
    # - name: Comment fmt
    #   if: ${{ steps.fmt.outputs.stdout }} != ''
    #   uses: actions/github-script@v7
    #   env:
    #     FMT: ${{ steps.fmt.outputs.stdout }}
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     script: |
    #       const output = `
    #       #### Terraform fmt ðŸ–Œ\`${{ steps.fmt.outcome }}\`
    #       <details>
    #       <summary>Show fmt</summary>
    #       \n\`\`\`\n${{ env.WORKING_DIRECTORY }}/environments/${{ matrix.target_dir }}/${process.env.FMT}\n\`\`\`
    #       </details>`;
    #       github.rest.issues.createComment({
    #         issue_number: context.issue.number,
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: output
    #       });
